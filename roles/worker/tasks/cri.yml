- set_fact:
    arch: "{{ architecture[ansible_architecture|lower] }}"

- block:
  - name: Download containerd
    ansible.builtin.get_url:
      url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-{{ansible_system | lower}}-{{ arch }}.tar.gz"
      dest: "/tmp"
      force: false
      mode: '0755'

  - name: Download runc
    ansible.builtin.get_url:
      url: "https://github.com/opencontainers/runc/releases/download/v{{ runc_version }}/runc.{{ arch }}"
      dest: "/tmp"
      force: false
      mode: '0755'

  - name: Untar containerd release
    ansible.builtin.unarchive:
      src: "/tmp/containerd-{{ containerd_version }}-{{ansible_system | lower}}-{{ arch }}.tar.gz"
      dest: "/usr/local"
      remote_src: true

  - name: Install runc
    shell: "install -m 755 /tmp/runc.{{ arch }} /usr/local/sbin/runc"

- name: Copy systemd file
  ansible.builtin.copy:
    src: files/containerd.service
    dest: /usr/local/lib/systemd/system/containerd.service
    mode: 0755

- name: Configure containerd (1/3)
  shell: "mkdir -p /etc/containerd && containerd config default | tee /etc/containerd/config.toml"
  args:
    creates: /etc/containerd/config.toml
- name: Configure containerd (2/3)
  shell: "sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml"
- name: Configure containerd (3/3)
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'disabled_plugins'
    state: absent
- name: remove apparmor profile for runc (if present)
  shell: mkdir -p /etc/apparmor.d/disable && ln -s /etc/apparmor.d/runc /etc/apparmor.d/disable/ && apparmor_parser -R /etc/apparmor.d/runc
  failed_when: false
  when: ansible_os_family == 'Debian'

- name: Reload & start service
  ansible.builtin.service:
    name: "containerd"
    enabled: true
    state: reloaded
  ignore_errors: true

