- set_fact:
    arch: "{{ architecture[ansible_architecture|lower] }}"
# - name: Download etcd release
#   ansible.builtin.get_url:
#     url: "{{ download_url }}/v{{ etcd_version }}/etcd-v{{ etcd_version }}-{{ansible_system | lower}}-{{ arch }}.tar.gz"
#     dest: "/tmp"
#     force: false
#     mode: '0755'
# - name: Untar etcd release
#   ansible.builtin.unarchive:
#     src: "/tmp/etcd-v{{ etcd_version }}-{{ansible_system | lower}}-{{ arch }}.tar.gz"
#     dest: "/tmp"
#     remote_src: true
#   register: etcd_untar
# - name: Move etcd binaries
#   ansible.builtin.copy:
#     src: "/tmp/etcd-v{{ etcd_version }}-{{ansible_system | lower}}-{{ arch }}/{{item}}"
#     dest: "/usr/local/bin/{{item}}"
#     mode: '0755'
#     remote_src: true
#   loop:
#     - etcd
#     - etcdctl

- name: Create etcd group
  ansible.builtin.group:
    name: etcd
    state: present
    system: true

- name: Create etcd user
  ansible.builtin.user:
    name: etcd
    home: /var/lib/etcd
    shell: /bin/false
    system: true
    group: etcd

- name: Create folders
  ansible.builtin.file:
    path: "{{item}}"
    state: directory
    mode: '0700'
    owner: etcd
    group: etcd
  loop:
    - /var/lib/etcd
    - /etc/etcd

- set_fact:
    ip_address: "{% if internal_ip is defined and internal_ip != '' %}{{internal_ip}}{% else %}{{ansible_default_ipv4.address}}{% endif %}"
- set_fact:
    initial_cluster: "{% for host in groups['etcd'] %}etcd-{{ hostvars[host]['ansible_hostname'] }}=https://{{hostvars[host]['ip_address']}}:2380{% if not loop.last %},{% endif %}{% endfor %}"

- name: Copy CA certificate
  ansible.builtin.copy:
    src: "/tmp/{{item.name}}"
    dest: "{{item.path}}"
    owner: etcd
    group: etcd
    mode: '0600'
  loop:
    - {name: etcd-ca.crt, path: /etc/etcd/ca.crt}
    - {name: etcd-ca.key, path: /etc/etcd/ca.key}

- name: Create etcd key
  ansible.builtin.shell: |
    openssl genrsa -out etcd.key 2048
    chown etcd:etcd etcd.key
    chmod 600 etcd.key
  args:
    chdir: /etc/etcd
    creates: /etc/etcd/etcd.key

- name: Create etcd CSR config
  ansible.builtin.template:
    src: etcd.cnf.j2
    dest: /tmp/etcd.cnf
    mode: '0644'
    owner: root
    group: root

- name: Create etcd CSR
  ansible.builtin.shell: "openssl req -new -key /etc/etcd/etcd.key -subj \"/CN=etcd\" -out etcd.csr -config etcd.cnf"
  args:
    chdir: /tmp

- name: Create etcd certificate
  ansible.builtin.shell: |
    openssl x509 -req -in etcd.csr -CA /etc/etcd/ca.crt -CAkey /etc/etcd/ca.key -out /etc/etcd/etcd.crt -extensions v3_req -extfile etcd.cnf -days 365
    chown etcd:etcd /etc/etcd/etcd.crt
    chmod 600 /etc/etcd/etcd.crt
  args:
    chdir: /tmp

- name: Create etcd config file
  ansible.builtin.template:
    src: etcd-config.yml.j2
    dest: /etc/etcd/etcd-config.yml
    mode: '0644'
    owner: root
    group: root

- name: Create systemd unit file
  ansible.builtin.template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
    mode: '0644'
    owner: root
    group: root
  register: etcd_service

- name: Reload & start service etcd
  ansible.builtin.service:
    name: etcd
    enabled: true
    state: reloaded
  when: etcd_service.changed
  ignore_errors: true
  no_log: true

- name: Start etcd
  ansible.builtin.service:
    name: etcd
    enabled: true
    state: started

- include_tasks: cleanup.yml