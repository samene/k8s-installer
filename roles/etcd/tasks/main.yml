- set_fact:
    arch: "{{ architecture[ansible_architecture|lower] }}"
- block:
  - name: Download etcd release
    ansible.builtin.get_url:
      url: "{{ download_url }}/v{{ etcd_version }}/etcd-v{{ etcd_version }}-{{ansible_system | lower}}-{{ arch }}.tar.gz"
      dest: "/tmp"
      force: false
      mode: '0755'
  - name: Untar etcd release
    ansible.builtin.unarchive:
      src: "/tmp/etcd-v{{ etcd_version }}-{{ansible_system | lower}}-{{ arch }}.tar.gz"
      dest: "/tmp"
      remote_src: true
    register: etcd_untar
  - name: Move etcd binaries
    ansible.builtin.copy:
      src: "/tmp/etcd-v{{ etcd_version }}-{{ansible_system | lower}}-{{ arch }}/{{item}}"
      dest: "/usr/local/bin/{{item}}"
      mode: '0755'
      remote_src: true
    loop:
      - etcd
      - etcdctl

- name: Create etcd group
  ansible.builtin.group:
    name: etcd
    state: present
    system: true

- name: Create etcd user
  ansible.builtin.user:
    name: etcd
    home: /var/lib/etcd
    shell: /bin/false
    system: true
    group: etcd

- name: Create folders
  ansible.builtin.file:
    path: "{{item}}"
    state: directory
    mode: '0700'
    owner: etcd
    group: etcd
  loop:
    - /var/lib/etcd
    - /etc/kubernetes/pki/etcd

- set_fact:
    ip_address: "{% if internal_ip is defined and internal_ip != '' %}{{internal_ip}}{% else %}{{ansible_default_ipv4.address}}{% endif %}"
- set_fact:
    initial_cluster: "{% for host in groups['etcd'] %}etcd-{{ hostvars[host]['ansible_hostname'] }}=https://{{hostvars[host]['ip_address']}}:2380{% if not loop.last %},{% endif %}{% endfor %}"

- name: Copy CA certificate
  ansible.builtin.copy:
    src: "{{tmp_folder}}/{{item.name}}"
    dest: "{{item.path}}"
    owner: etcd
    group: etcd
    mode: '0600'
  loop:
    - {name: etcd-ca.crt, path: /etc/kubernetes/pki/etcd/ca.crt}
    - {name: etcd-ca.key, path: /etc/kubernetes/pki/etcd/ca.key}

- name: Create etcd server key
  ansible.builtin.shell: |
    openssl genrsa -out server.key 4096
    chown etcd:etcd server.key
    chmod 600 server.key
  args:
    chdir: /etc/kubernetes/pki/etcd
    creates: /etc/kubernetes/pki/etcd/server.key

- name: Create etcd server CSR config
  ansible.builtin.template:
    src: "{{item}}.j2"
    dest: "/tmp/{{item}}"
    mode: '0644'
    owner: root
    group: root
  loop:
  - peer.conf
  - etcd.conf

- name: Create etcd server CSR
  ansible.builtin.shell: "openssl req -new -key /etc/kubernetes/pki/etcd/server.key -out etcd.csr -config etcd.conf -section etcd-server"
  args:
    chdir: /tmp

- name: Create etcd server certificate
  ansible.builtin.shell: |
    openssl x509 -req -in etcd.csr -CA /etc/kubernetes/pki/etcd/ca.crt -CAkey /etc/kubernetes/pki/etcd/ca.key -out /etc/kubernetes/pki/etcd/server.crt -copy_extensions copyall -CAcreateserial -days 365
    chown etcd:etcd /etc/kubernetes/pki/etcd/server.crt
    chmod 600 /etc/kubernetes/pki/etcd/server.crt
  args:
    chdir: /tmp

- name: Create etcd peer key
  ansible.builtin.shell: |
    openssl genrsa -out peer.key 4096
    chown etcd:etcd peer.key
    chmod 600 peer.key
  args:
    chdir: /etc/kubernetes/pki/etcd
    creates: /etc/kubernetes/pki/etcd/peer.key

- name: Create etcd peer CSR
  ansible.builtin.shell: "openssl req -new -key /etc/kubernetes/pki/etcd/peer.key -out peer.csr -config /tmp/peer.conf -section etcd-peer"
  args:
    chdir: /tmp

- name: Create etcd peer certificate
  ansible.builtin.shell: |
    openssl x509 -req -in peer.csr -CA /etc/kubernetes/pki/etcd/ca.crt -CAkey /etc/kubernetes/pki/etcd/ca.key -out /etc/kubernetes/pki/etcd/peer.crt -copy_extensions copyall -CAcreateserial -days 365
    chown etcd:etcd /etc/kubernetes/pki/etcd/peer.crt
    chmod 600 /etc/kubernetes/pki/etcd/peer.crt
  args:
    chdir: /tmp

- name: Create etcd config file
  ansible.builtin.template:
    src: etcd-config.yml.j2
    dest: /etc/kubernetes/etcd-config.yml
    mode: '0644'
    owner: root
    group: root

- name: Create systemd unit file
  ansible.builtin.template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
    mode: '0600'
    owner: root
    group: root
  register: etcd_service

- name: Reload & start service etcd
  ansible.builtin.service:
    name: etcd
    enabled: true
    state: reloaded
  when: etcd_service.changed
  ignore_errors: true
  no_log: true

- name: Start etcd
  ansible.builtin.service:
    name: etcd
    enabled: true
    state: restarted

- include_tasks: cleanup.yml
