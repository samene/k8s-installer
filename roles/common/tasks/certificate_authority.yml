
- name: Delete temporary folder
  ansible.builtin.shell: "sudo rm -rf {{ tmp_folder }}"
  delegate_to: localhost
  run_once: true

- name: Create temporary folder
  ansible.builtin.file:
    path: "{{ tmp_folder }}"
    state: directory
  delegate_to: localhost
  run_once: true

- name: Create CA keys
  ansible.builtin.shell: "openssl genrsa -out {{tmp_folder}}/{{item}}.key 4096 && chown {{ lookup('env', 'USER') }} {{tmp_folder}}/{{item}}.key"
  args:
    chdir: "{{ tmp_folder }}"
  loop:
    - ca
    - etcd-ca
    - front-proxy-ca
    - sa
  delegate_to: localhost
  run_once: true

- name: Copy ca.conf
  ansible.builtin.copy:
    src: files/ca.conf
    dest: "{{tmp_folder}}/ca.conf"
  delegate_to: localhost
  run_once: true

- name: Create CA certificates
  ansible.builtin.shell: "openssl req -x509 -new -sha512 -noenc -key {{item.name}}.key -days 3652 -config ca.conf -out {{item.name}}.crt -subj \"{{item.subject}}\" && chown {{ lookup('env', 'USER') }} {{item.name}}.crt"
  args:
    chdir: "{{ tmp_folder }}"
  loop:
  - {name: ca, subject: "/CN=kubernetes-ca"}
  - {name: etcd-ca, subject: "/CN=etcd-ca"}
  - {name: front-proxy-ca, subject: "/CN=kubernetes-front-proxy-ca"}
  delegate_to: localhost
  run_once: true

- name: Create Service Account signing certificate
  ansible.builtin.shell: "openssl rsa -in sa.key -pubout -out sa.pub"
  args:
    chdir: "{{ tmp_folder }}"
  delegate_to: localhost
  run_once: true

- name: Generate etcd encryption key
  ansible.builtin.shell: "head -c 32 /dev/urandom | base64"
  register: etcd_encryption_key
  delegate_to: localhost
  run_once: true
  no_log: true

- name: Create etcd encryption config
  ansible.builtin.template:
    src: encryption-config.yaml.j2
    dest: "{{tmp_folder}}/encryption-at-rest.yaml"
    mode: '0600'
    owner: root
    group: root
    force: false
  delegate_to: localhost
  run_once: true

